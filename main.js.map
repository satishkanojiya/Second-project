{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/model/form.services.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/regx.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \" <app-main></app-main> \\r\\n <router-outlet></router-outlet>\\r\\n \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'project2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport {RouterModule} from '@angular/router';\nimport { routes } from './app.routes';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormServices} from '../app/model/form.services';\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    RegisterComponent,\n    HomeComponent,\n    LoginComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule\n    \n  ],\n  providers: [FormServices],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {RouterModule,Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\n\r\nexport const routes=[\r\n    {\r\n     path:'home',\r\n     component:HomeComponent\r\n},\r\n{\r\n    path:'login',\r\n    component:LoginComponent\r\n},\r\n{\r\n    path:'register',\r\n    component:RegisterComponent\r\n}\r\n]","module.exports = \"\"","module.exports = \"<h1>Welcome</h1>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector:'app-home',\r\n    templateUrl:'./home.component.html',\r\n    styleUrls:['./home.component.css'],\r\n})\r\nexport class HomeComponent{\r\n\r\n}","module.exports = \".well{\\r\\nwidth: 50%;\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"container well\\\">\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n      <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"Save(userForm.value)\\\">\\r\\n\\r\\n    <div class=\\\"form-group \\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\" formGroupName=\\\"UserLogin\\\">\\r\\n\\r\\n \\r\\n                  <label>Username</label>\\r\\n                  \\r\\n                    <input type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"Enter your username\\\"\\r\\n                    formControlName=\\\"UserName\\\"\\r\\n                    >\\r\\n \\r\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls.UserLogin.controls['UserName'].hasError('required')\\r\\n                                                          && userForm.controls.UserLogin.controls.UserName.touched\\r\\n                    \\\">\\r\\n                          Username is required*\\r\\n                     </div>\\r\\n </div>\\r\\n \\r\\n \\r\\n \\r\\n                  <div class=\\\"form-group\\\" formGroupName=\\\"UserLogin\\\">\\r\\n                    <label>Password</label>\\r\\n                    <input type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"Enter your password\\\"\\r\\n                    formControlName=\\\"Password\\\"\\r\\n                    >\\r\\n         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls.UserLogin.controls['Password'].hasError('required')\\r\\n                                                         && userForm.controls.UserLogin.controls.Password.touched\\r\\n                     \\\">\\r\\n                 'Enter correct password'\\r\\n                </div>\\r\\n                </div>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-danger\\\" [disabled]=\\\"!userForm.valid\\\">Sumbit</button>\\r\\n\\r\\n \\r\\n\\r\\n    </div>\\r\\n  \\r\\n    \\r\\n  \\r\\n    \\r\\n    \\r\\n\\r\\n    \\r\\n\\r\\n    \\r\\n\\r\\n    \\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\nimport {ReactiveForm} from '../model/reactiveform';\r\nimport {Validators,FormGroup,FormBuilder} from '@angular/forms';\r\nimport {UserRegx} from '../regx';\r\nimport  {FormServices} from '../model/form.services';\r\nimport {Router} from '@angular/router';\r\n@Component({\r\n    selector:'app-login',\r\n    templateUrl:'./login.component.html',\r\n    styleUrls:['./login.component.css'],\r\n})\r\nexport class LoginComponent{\r\n\r\n    userForm:FormGroup;\r\n    constructor (private _fb: FormBuilder,private formservices:FormServices,private router:Router){}\r\n     ngOnInit(){\r\n         this.userForm= this._fb.group({\r\n          UserLogin: this._fb.group({\r\n             'UserName':['',[Validators.required,UserRegx.UserName]],\r\n             'Password':['',[Validators.required,UserRegx.Password]]\r\n          })\r\n            })\r\n      }\r\n      Save(data:ReactiveForm){\r\n        console.log(data);\r\n          this.formservices.Register(data).subscribe(val=>{\r\n              if(val)\r\n              {\r\n                  alert('Login succesful');\r\n                  this.router.navigateByUrl('/home');\r\n                  \r\n              }\r\n          })\r\n      }\r\n\r\n\r\n    \r\n}","module.exports = \"button{\\r\\n    margin-left: 10px;\\r\\n}\"","module.exports = \"\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">\\r\\n    <a routerLink=\\\"/home\\\">Home</a></button>\\r\\n\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">\\r\\n    <a routerLink=\\\"/register\\\">Register</a></button>\\r\\n\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">\\r\\n   <a routerLink=\\\"/login\\\" >Login</a></button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector:'app-main',\r\n    templateUrl:'./main.component.html',\r\n    styleUrls:['./main.component.css'],\r\n})\r\nexport class MainComponent{\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class FormServices {\r\n    private url=  'http://test.web.api.acorsociety.com/ideators/api/users/userregistrationasync';\r\n    private login =   'http://test.web.api.acorsociety.com/ideators/api/users/userloginasync';\r\n    \r\n     \r\n     headers:HttpHeaders;\r\n    constructor(private http:HttpClient){\r\n  this.headers=new HttpHeaders({'Content-Type': 'Application/json' });\r\n    }\r\n    Register(item){\r\n        return this.http.post(this.url,JSON.stringify(item), {headers:this.headers});\r\n    }\r\n    user(item){\r\n        return this.http.post(this.login,JSON.stringify(item),{headers:this.headers})\r\n    }\r\n}","module.exports = \".well{\\r\\n    width: 50%;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"page-header\\\">\\r\\n<div class=\\\"container well\\\">\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n     <div class=\\\"col-md-6\\\">\\r\\n<form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"Save(userForm.value)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n              <label>First Name</label>\\r\\n              <input type=\\\"text\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Enter your First name\\\"\\r\\n               formControlName=\\\"FirstName\\\"\\r\\n        >\\r\\n <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls['FirstName'].hasError('required')\\r\\n                                    && userForm.controls.FirstName.touched\\r\\n  \\r\\n \\\">\\r\\n      Firstname is required*\\r\\n </div>\\r\\n\\r\\n    </div>\\r\\n   \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Last Name</label>\\r\\n     <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           placeholder=\\\"Enter your Last name\\\"\\r\\n           formControlName=\\\"LastName\\\"\\r\\n            >\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls['LastName'].hasError('required')\\r\\n                                                  && userForm.controls.LastName.touched\\r\\n            \\\">\\r\\n            LastName is required*\\r\\n\\r\\n            </div>\\r\\n    </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Gender</label><br>\\r\\n                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"male\\\">Male<br>\\r\\n                <input type=\\\"radio\\\"  name=\\\"gender\\\" value=\\\"female\\\" >Female\\r\\n                \\r\\n         </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label>DOB</label>\\r\\n                <input type=\\\"date\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\"Enter your DOB\\\"\\r\\n                      \\r\\n                       >\\r\\n               </div>\\r\\n\\r\\n               \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Mobile No</label>\\r\\n                <input type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\"Enter your Mobile no\\\"\\r\\n                      formControlName=\\\"MobileNo\\\"\\r\\n                     >\\r\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls['MobileNo'].hasError('required')\\r\\n                                        && userForm.controls.MobileNo.touched\\r\\n                 \\\">\\r\\n                    MobileNo is required*\\r\\n</div>\\r\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls['MobileNo'].hasError('maxLength')\\r\\n                                      && userForm.controls.MobileNo.touched\\r\\n\\\">\\r\\n     Enter 10 digit no\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n <label>Email Id</label>\\r\\n <input type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"Enter your Email id\\\"\\r\\n        formControlName=\\\"EmailId\\\"\\r\\n >\\r\\n <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls['EmailId'].hasError('required')\\r\\n                                       && userForm.controls.EmailId.touched\\r\\n\\\">\\r\\nEmailId is required*\\r\\n</div>\\r\\n \\r\\n  </div>\\r\\n               <div class=\\\"form-group\\\" formGroupName=\\\"UserLogin\\\">\\r\\n                \\r\\n                   UserLogin:<br>\\r\\n\\r\\n                 <label>Username</label>\\r\\n                 \\r\\n                   <input type=\\\"text\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   placeholder=\\\"Enter your username\\\"\\r\\n                   formControlName=\\\"UserName\\\"\\r\\n                   >\\r\\n\\r\\n                   <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls.UserLogin.controls['UserName'].hasError('required')\\r\\n                                                         && userForm.controls.UserLogin.controls.UserName.touched\\r\\n                   \\\">\\r\\n                         Username is required*\\r\\n                    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n                 <div class=\\\"form-group\\\" formGroupName=\\\"UserLogin\\\">\\r\\n                   <label>Password</label>\\r\\n                   <input type=\\\"text\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   placeholder=\\\"Enter your password\\\"\\r\\n                   formControlName=\\\"Password\\\"\\r\\n                   >\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userForm.controls.UserLogin.controls['Password'].hasError('required')\\r\\n                                                        && userForm.controls.UserLogin.controls.Password.touched\\r\\n                    \\\">\\r\\n                'Enter correct password'\\r\\n               </div>\\r\\n               </div>\\r\\n\\r\\n               \\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-danger\\\" [disabled]=\\\"!userForm.valid\\\">Sumbit</button>\\r\\n               \\r\\n                        \\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {ReactiveForm} from '../model/reactiveform';\r\nimport {Validators,FormGroup,FormBuilder} from '@angular/forms';\r\nimport {UserRegx} from '../regx';\r\nimport  {FormServices} from '../model/form.services';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector:'app-register',\r\n    templateUrl:'./register.component.html',\r\n    styleUrls:['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit{\r\n    userForm:FormGroup;\r\n    constructor (private _fb: FormBuilder,private formservices:FormServices,private router:Router){}\r\n     ngOnInit(){\r\n         this.userForm= this._fb.group({\r\n            \r\n            'FirstName':['', [Validators.required, UserRegx.FirstName]],\r\n            'LastName': ['', [Validators.required, UserRegx.LastName]],\r\n            'MobileNo': ['',[Validators.required,  UserRegx.MobileNo]],\r\n            'EmailId': ['',[Validators.required,   UserRegx.Email]],\r\n          UserLogin: this._fb.group({\r\n             'UserName':['',[Validators.required,UserRegx.UserName]],\r\n             'Password':['',[Validators.required,UserRegx.Password]]\r\n          })\r\n            })\r\n      }\r\n      Save(data:ReactiveForm){\r\n        console.log(data);\r\n          this.formservices.Register(data).subscribe(value=>{\r\n              if(value)\r\n              {\r\n                  alert('registration succesful');\r\n                  this.router.navigateByUrl('/login');\r\n                  \r\n              }\r\n          })\r\n      }\r\n\r\n} \r\n","export class UserRegx{\r\n     static FirstName(control)\r\n     {\r\n      const regx=  /^[a-zA-Z0-9]+$/;\r\n      const valid= regx.test(control.value);\r\n      return valid ? null :{FirstName:true} \r\n     }\r\n\r\n     static LastName(control)\r\n     {\r\n        const regx=  /^[a-zA-Z0-9]+$/;\r\n        const valid= regx.test(control.value);\r\n        return valid ? null :{LastName:true} \r\n       }\r\n       static MobileNo(control)\r\n       {\r\n        const regx=/^([0|\\+[0-9]{1,5})?([7-9][0-9]{9})$/;\r\n        const valid= regx.test(control.value);\r\n        return valid ? null :{MobileNo:true} \r\n       }\r\n\r\n       static Email(control)\r\n       {\r\n        const regx=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; \r\n        const valid= regx.test(control.value);\r\n        return valid ? null :{EmailId:true} \r\n       }\r\n       \r\n       static UserName(control)\r\n       {\r\n           const regx=/^[a-zA-Z0-9]+$/      ;\r\n           const vaild=regx.test(control.value);\r\n           return vaild ? null :{UserName:true}\r\n       }\r\n\r\n       static Password(control)\r\n       {\r\n           const regx=/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\r\n           const vaild=regx.test(control.value);\r\n           return vaild ? null :{Password:true}\r\n       }\r\n\r\n       \r\n\r\n\r\n       \r\n   \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}